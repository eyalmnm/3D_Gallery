Error Codes:

    ERROR_CODE_SUCCESS = 0
    VALIDATE_INPUT_SCHEMA_FAILED = 10
    ERROR_CODE_USER_NOT_AUTHORIZED = 20

    # Login Error codes (100 - 199)
    ERROR_CODE_LOGIN_FAILED = 100
    ERROR_CODE_USER_NOT_LOGGED_IN = 101

    # Login Error codes (200 - 299)
    ERROR_CODE_REGISTRATION_FAILED = 200
    ERROR_CODE_USERNAME_ALREADY_TAKEN = 201

    # Room Error Codes (300 - 399)
    ERROR_CODE_ROOM_NOT_FOUND = 300
    ERROR_CODE_ROOM_CONTAINS_WALLS = 301
    ERROR_CODE_ROOM_ALREADY_EXIST = 302

    # Wall Error Codes (400 - 499)
    ERROR_CODE_WALL_NOT_FOUND = 400
    ERROR_CODE_WALL_CONTAINS_PAINTINGS = 401

    # Painting Error Codes (500 - 599)
    ERROR_CODE_PAINTING_NOT_FOUND = 500
    ERROR_CODE_PAINTING_CONTAINS_BG_LIGHTS = 501
    ERROR_CODE_PAINTING_CONTAINS_FG_LIGHTS = 502
    ERROR_CODE_PAINTING_CONTAINS_REAL_SIZES = 503
    ERROR_CODE_PAINTING_CONTAINS_PIC_SIZES = 504

    # Real Size Error Codes (600 - 699)
    ERROR_CODE_REAL_SIZE_NOT_FOUND = 600

    # Pic Size Error Codes (700 - 700)
    ERROR_CODE_PIC_SIZE_NOT_FOUND = 700

    # Bg Light Error Codes (800 - 899)
    ERROR_CODE_BG_LIGHT_NOT_FOUND = 800

    # Fg Light Error Codes (900 - 999)
    ERROR_CODE_FG_LIGHT_NOT_FOUND = 900

    # Icon Error Codes (1000 - 1099)
    ERROR_CODE_ICON_NOT_FOUND = 1000

    # Texture Error Codes (1100 - 1199)
    ERROR_CODE_TEXTURE_NOT_FOUND = 1100
    ERROR_CODE_DEFAULT_TEXTURE_NOT_FOUND = 1101

    # Global Settings Error Codes (1200 - 1299)
    ERROR_CODE_GLOBAL_SETTINGS_NOT_FOUND = 1200

    # Floor Error Codes (1300 - 1399)
    ERROR_CODE_FLOOR_ALREADY_EXIST = 1300
    ERROR_CODE_FLOOR_NOT_FOUND = 1301





Route Table:
	
***   Test   ***
	@app.route('/', methods=['POST', 'GET'])
	@app.route('/index', methods=['POST', 'GET'])
	def index():
    		return "Hello, World!"


***   Defaults   ***
    @app.route('/get_room_texture', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'textureData': {'id': Integer, 'src': String, 'width': DECIMAL, 'height': DECIMAL}}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        4 - 'unknown package!!!'


    @app.route('/update_room_texture', methods=['PUT'])
    Input :
        uuid = fields.Str(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'


    @app.route('/get_ceiling_texture', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'textureData': {'id': Integer, 'src': String, 'width': DECIMAL, 'height': DECIMAL}}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 1101, 'error_message': 'error code default texture not found', 'error_details': ''default texture not found” }
        4 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        5 - 'unknown package!!!'
 

    @app.route('/update_ceiling_texture', methods=['PUT'])
    Input:
        uuid = fields.Str(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        s3 - 'unknown package!!!'


    @app.route('/get_wall_texture', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output: 
        1 - {'result_code': 0, 'error_message': '', 'textureData': {'id': Integer, 'src': String, 'width': DECIMAL, 'height': DECIMAL}}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 1101, 'error_message': 'error code default texture not found', 'error_details': ''default texture not found” }
        4 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        5 - 'unknown package!!!'


    @app.route('/update_wall_texture', methods=['PUT'])
    Input:
        uuid = fields.Str(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'



***   User   ***
    @app.route('/admin_login', methods=['POST', 'GET'])
    Input:
	    username = fields.Str(required=True)
    	password = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'uuid': uuid}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'


    @app.route('/login', methods=['POST', 'GET'])
    Input:
        username = fields.Str(required=True)
        password = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'uuid': uuid}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'


    @app.route('/register', methods=['POST'])
    Input:
        username = fields.Str(required=True)
        password = fields.Str(required=True)
        language = fields.Str(required=False) Default Eng
        status = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'uuid': uuid}
        2 - {'result_code': 200, 'error_message': 'error code registration failed', 'error_details': 'User registration failed '}
        3 - 'unknown package!!!'


    @app.route('/login_remotely', methods=['GET', 'POST'])
    Input:
        key = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'uuid': uuid}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'




***   Floor Texture   ***
    @app.route('/add_floor_texture', methods=['POST'])
    Input:
        uuid = fields.Str(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
        floor_id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        3 - 'unknown package!!!'


    @app.route('/get_floor_texture', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'textureData': {'id': Integer, 'src': String, floor_id: Integer, 'width': DECIMAL, 'height': DECIMAL}}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        4 - 'unknown package!!!'


    @app.route('/get_floor_texture_by_floor', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
        floor_id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texturesData': [{floorTextureData}, {floorTextureData}...]}
            floorTextureData = {'id': Integer, 'src': String, floor_id: Integer, 'width': DECIMAL, 'height': DECIMAL}
        2 - {'result_code': 1301, 'error_message': 'error code floor not found', 'error_details': 'floor not found: id'}
        3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        4 - 'unknown package!!!'


    @app.route('/update_floor_texture', methods=['PUT'])
    Input:
        id = fields.Int(required=True)
        uuid = data.get('uuid')
        src = data.get('src')
        width = data.get('width')
        height = data.get('height')
        floor_id = data.get('floor_id')
        user_id = get_user_id(uuid=uuid)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        4 - 'unknown package!!!'


    @app.route('/delete_floor_texture', methods=['DELETE'])
    Input:
        id = fields.Int(required=True)
        uuid = data.get('uuid')
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
		3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
		4 - 'unknown package!!!'

***   Floor   ***
    @app.route('/add_floor', methods=['POST'])
    Input:
        name = fields.Str(required=True)
        uuid = fields.Str(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'floor_id': id}
        2 - {'result_code': 1300, 'error_message': 'error code floor already exist', 'Floor ' + name + ' already exist'}
        3 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        4 - 'unknown package!!!'


    @app.route('/get_floor', methods=['POST', 'GET'])
    Input:
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
            1 - {'result_code': 0, 'error_message': '', 'floorData': {
                    'Id': Integer,
                    'user_id': Integer,
                    'name': String,
                    'rooms': [{Room}, {Room}],	0..n
                    }}
            2 - {'result_code': 1301, 'error_message': 'error code floor not found', 'error_details': ''floor not found: id'}
            3 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
            4 - 'unknown package!!!'


    @app.route('/update_floor', methods=['PUT'])
    Input:
        name = fields.Str(required=True)
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'floorData': {
                    'Id': Integer,
                    'user_id': Integer,
                    'name': String,
                    'rooms': [{Room}, {Room}],	0..n
                    }}
        2 - {'result_code': 1301, 'error_message': 'error code floor not found', 'error_details': ''floor not found: id'}
        3 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        4 - 'unknown package!!!'


    @app.route('/delete_floor', methods=['DELETE'])
    Input:
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'floor_id': id}
        2 - {'result_code': 1301, 'error_message': 'error code floor not found', 'error_details': ''floor not found: id'}
        3 - {'result_code': 100, 'error_message': 'error code login failed', 'error_details': 'Username and Password not found'}
        4 - 'unknown package!!!'



	***   Room   ***
        @app.route('/add_room', methods=['POST'])
        Input:
            texture_id = fields.Int(required=True)
            name = fields.Str(required=True)
            uuid = fields.Str(required=True)
            floor_id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'room_id': room.id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_room', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'roomData':{'Id': Integer, 'user_id': Integer, 'texture_id': Integer, 'name': String, 'walls':[{wallData}. {wallData}]}}
                wallData = {'id': Integer, 'room_id': Integer, 'texture_id': Integer, 'name': String, 'x_pos': DECIMAL,
                'y_pos': DECIMAL, 'z_pos': DECIMAL,
                'paintings':[{paintingData}, {paintingData}]	0..n
                }}
                paintingData = {'result_code': 0, 'error_message': '', 'paintingData': {
                    'Id': Integer,
                    'wall_id': Integer,
                    'name': String,
                    'detail': String,
                    'x_pos': DECIMAL,
                    'y_pos': DECIMAL,
                    'z_pos': DECIMAL,
                    'real_sizes': [{realSizeData}, {realSizeData}],	0..n
                    'pic_sizes': [{picSizeData}, {picSizeData}],	0..m
                    'bg_lights': [{bgLightData}, {bgLightData}],	0..k
                    'fg_lights': [{fgLightData}, {fgLightData}]	0..p
                }}
                realSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                picSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                bgLightData =  {'id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'color': String}
                fgLightData =  {'id':Integer, 'painting_id': Integer, 'color': String, 'x_pos': DECIMAL, 'y_pos': DECIMAL, 'z_pos': DECIMAL}
            2 - {'result_code': 300, 'error_message': 'error code room not found', 'error_details': 'Room not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_room', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            texture_id = fields.Int(required=True)
            name = fields.Str(required=True)
            floor_id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'room_id': id}
            2 - {'result_code': 300, 'error_message': 'error code room not found', 'error_details': 'Room not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_room', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'room_id': id}
            2 - {'result_code': 300, 'error_message': 'error code room not found', 'error_details': 'Room not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   Wall   ***
        @app.route('/add_wall', methods=['POST'])
        Input:
            texture_id = fields.Int(required=True)
            name = fields.Str(required=True)
            uuid = fields.Str(required=True)
            room_id = fields.Int(required=True)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'wall_id': id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_wall', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'wallData': {'id': Integer, 'room_id': Integer, 'texture_id': Integer, 'name': String, 'x_pos': DECIMAL,
                'y_pos': DECIMAL, 'z_pos': DECIMAL,
                'paintings':[{paintingData}, {paintingData}]	0..n
                }}
                paintingData = {'result_code': 0, 'error_message': '', 'paintingData': {
                    'Id': Integer,
                    'wall_id': Integer,
                    'name': String,
                    'detail': String,
                    'x_pos': DECIMAL,
                    'y_pos': DECIMAL,
                    'z_pos': DECIMAL,
                    'real_sizes': [{realSizeData}, {realSizeData}],	0..n
                    'pic_sizes': [{picSizeData}, {picSizeData}],	0..m
                    'bg_lights': [{bgLightData}, {bgLightData}],	0..k
                    'fg_lights': [{fgLightData}, {fgLightData}]	0..p
                }}
                realSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                picSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                bgLightData =  {'id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'color': String}
                fgLightData =  {'id':Integer, 'painting_id': Integer, 'color': String, 'x_pos': DECIMAL, 'y_pos': DECIMAL, 'z_pos': DECIMAL}

            2 - {'result_code': 400, 'error_message': 'error code wall not found', 'error_details': 'Wall not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_wall', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            texture_id = fields.Int(required=True)
            name = fields.Str(required=True)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'wall_id': wall.id}
            2 - {'result_code': 400, 'error_message': 'error code wall not found', 'error_details': 'Wall not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_wall', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'wall_id': wall.id}
            2 - {'result_code': 400, 'error_message': 'error code wall not found', 'error_details': 'Wall not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   Painting   ***
        @app.route('/add_painting', methods=['POST'])
        Input:
            wall_id = fields.Int(required=True)
            name = fields.Str(required=True)
            detail = fields.Str(required=False)
            uuid = fields.Str(required=True)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'painting_id': painting.id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_painting', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'paintingData': {
                    'Id': Integer,
                    'wall_id': Integer,
                    'name': String,
                    'detail': String,
                    'x_pos': DECIMAL,
                    'y_pos': DECIMAL,
                    'z_pos': DECIMAL,
                    'real_sizes': [{realSizeData}, {realSizeData}],	0..n
                    'pic_sizes': [{picSizeData}, {picSizeData}],	0..m
                    'bg_lights': [{bgLightData}, {bgLightData}],	0..k
                    'fg_lights': [{fgLightData}, {fgLightData}]	0..p
                }}
                realSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                picSizeData = {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}
                bgLightData =  {'id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'color': String}
                fgLightData =  {'id':Integer, 'painting_id': Integer, 'color': String, 'x_pos': DECIMAL, 'y_pos': DECIMAL, 'z_pos': DECIMAL}

            2 - {'result_code': 500, 'error_message': 'error code painting not found', 'error_details': 'Painting not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_painting', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            name = fields.Str(required=True)
            detail = fields.Str(required=False)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'painting_id': painting.id}
            2 - {'result_code': 500, 'error_message': 'error code painting not found', 'error_details': 'Painting not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_painting', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'painting_id': painting.id}
            2 - {'result_code': 500, 'error_message': 'error code painting not found', 'error_details': 'Painting not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   Real Size   ***
        @app.route('/add_real_size', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            painting_id = fields.Int(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'real_size_id': real_size.id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_real_size', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'realSizeData': {'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}}
            2 - {'result_code': 600, 'error_message': 'error code real size not found', 'error_details': 'Real Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_real_size', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'real_size_id': id}
            2 - {'result_code': 600, 'error_message': 'error code real size not found', 'error_details': 'Real Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_real_size', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'real_size_id': id}
            2 - {'result_code': 600, 'error_message': 'error code real size not found', 'error_details': 'Real Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   Pic Size   ***
        @app.route('/add_pic_size', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            painting_id = fields.Int(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'pic_size_id': id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_pic_size', methods=['POST', 'GET'])
        Input:    
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'picSizeData':{'Id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'height': DECIMAL}}
            2 - {'result_code': 700, 'error_message': 'error code pic size not found', 'error_details': 'Pic Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_pic_size', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'pic_size_id': id}
            2 - {'result_code': 700, 'error_message': 'error code pic size not found', 'error_details': 'Pic Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_pic_size', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'pic_size_id': id}
            2 - {'result_code': 700, 'error_message': 'error code pic size not found', 'error_details': 'Pic Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   BG Light   ***
        @app.route('/add_bg_light', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            painting_id = fields.Int(required=True)
            width = fields.Float(required=True)
            color = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'bg_light_id': id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_bg_light', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'bgLightData': {'id': Integer, 'painting_id': Integer, 'width': DECIMAL, 'color': String}} 
            2 - {'result_code': 800, 'error_message': 'error code bg light not found', 'error_details': 'Bg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_bg_light', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            width = fields.Float(required=True)
            color = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:  
            1 - {'result_code': 0, 'error_message': '', 'bg_light_id': id}
            2 - {'result_code': 800, 'error_message': 'error code bg light not found', 'error_details': 'Bg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_gb_light', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:   
            1 - {'result_code': 0, 'error_message': '', 'bg_light_id': id}
            2 - {'result_code': 800, 'error_message': 'error code bg light not found', 'error_details': 'Bg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



	***   FG Light   ***
        @app.route('/add_fg_light', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            painting_id = fields.Int(required=True)
            color = fields.Int(required=True)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'fg_light_id': id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_fg_light', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'fgLightData': {'id':Integer, 'painting_id': Integer, 'color': String, 'x_pos': DECIMAL, 'y_pos': DECIMAL, 'z_pos': DECIMAL}}
            2 - {'result_code': 900, 'error_message': 'error code fg light not found', 'error_details': 'Fg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_fg_light', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            color = fields.Int(required=True)
            x_pos = fields.Float(required=True)
            y_pos = fields.Float(required=True)
            z_pos = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'fg_light_id': id}
            2 - {'result_code': 900, 'error_message': 'error code fg light not found', 'error_details': 'Fg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_fg_light', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'fg_light_id': id}
            2 - {'result_code': 900, 'error_message': 'error code fg light not found', 'error_details': 'Fg Light not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


		
	***   Icon   ***
        @app.route('/add_icon', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            user_id = fields.Int(required=True)
            src = fields.Str(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'icon_id': id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'


        @app.route('/get_icon', methods=['POST', 'GET'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'iconData': {'id': Integer, 'user_id': Integer, 'src': String, 'width': DECIMAL, 'height': DECIMAL}})
            2 - {'result_code': 1000, 'error_message': 'error code icon not found', 'error_details': ''icon not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/update_icon', methods=['PUT'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
            src = fields.Str(required=True)
            width = fields.Float(required=True)
            height = fields.Float(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'icon_id': id}
            2 - {'result_code': 1000, 'error_message': 'error code icon not found', 'error_details': ''icon not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'


        @app.route('/delete_icon', methods=['DELETE'])
        Input:
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output: 
            1 - {'result_code': 0, 'error_message': '', 'icon_id': id}
            2 - {'result_code': 1000, 'error_message': 'error code icon not found', 'error_details': ''icon not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'



***   Texture   ***
    @app.route('/add_texture', methods=['POST'])
    Input:
        uuid = fields.Str(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
    Header:
        Content-Type: application/json
    Output:
        1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
        2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        3 - 'unknown package!!!'


	@app.route('/get_texture', methods=['POST', 'GET'])
    	Input:
    		uuid = fields.Str(required=True)
    		id = fields.Int(required=True)
    Header:
		    Content-Type: application/json
	Output:
        1 - {'result_code': 0, 'error_message': '', 'textureData': {'id': Integer, 'src': String, 'width': DECIMAL, 'height': DECIMAL}}
        2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
        3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
        4 - 'unknown package!!!'


	@app.route('/update_texture', methods=['PUT'])
	Input:
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
        src = fields.Str(required=True)
        width = fields.Float(required=True)
        height = fields.Float(required=True)
    Header:
		Content-Type: application/json
	Output: 
		1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
		2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
		3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
		4 - 'unknown package!!!'


	@app.route('/delete_texture', methods=['DELETE'])
	Input:
        uuid = fields.Str(required=True)
        id = fields.Int(required=True)
    Header:
		Content-Type: application/json {'result_code': 0, 'error_message': '', 'texture_id': texture.id}
	Output: 
		1 - {'result_code': 0, 'error_message': '', 'texture_id': id}
		2 - {'result_code': 1100, 'error_message': 'error code texture not found', 'error_details': ''texture not found: id'}
		3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
		4 - 'unknown package!!!'
		
		
		
	***   GlobalSettings   ***		
        @app.route('/save_global_settings', methods=['POST'])
        Input:
            uuid = fields.Str(required=True)
            floor_texture_index = fields.Int(required=True)
            wall_texture_index = fields.Int(required=True)
            startup_room_index = fields.Int(required=True)
            floor_texture_name = fields.Str(required=True)
            wall_texture_name = fields.Str(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '','global_settings_id': globalSettings.id}
            2 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            3 - 'unknown package!!!'     


        @app.route('/get_global_settings_by_id', methods=['POST', 'GET'])
        Input:    
            uuid = fields.Str(required=True)
            id = fields.Int(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'globalSettingsData': {'id': Integer, 'floor_texture_index': Integer, 
                    'wall_texture_index': Integer, 'startup_room_index': Integer, 'floor_texture_name': String, 'wall_texture_name': String}}
            2 - {'result_code': 1200, 'error_message': 'error code global settings not found', 'error_details': 'Real Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'
		

        @app.route('/get_global_settings', methods=['POST', 'GET'])		
        Input:    
            uuid = fields.Str(required=True)
        Header:
            Content-Type: application/json
        Output:
            1 - {'result_code': 0, 'error_message': '', 'globalSettingsData': {'id': Integer, 'floor_texture_index': Integer, 
                    'wall_texture_index': Integer, 'startup_room_index': Integer, 'floor_texture_name': String, 'wall_texture_name': String}}
            2 - {'result_code': 1200, 'error_message': 'error code global settings not found', 'error_details': 'Real Size not found: id'}
            3 - {'result_code': 101, 'error_message': 'error code user not logged in', 'error_details': 'User not logged in'}
            4 - 'unknown package!!!'
